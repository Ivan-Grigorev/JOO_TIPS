# Generated by Django 4.0.2 on 2022-03-28 09:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('joo_tips_app', '0002_pythontheorydatatypes_pythontheoryvariables_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PythonTheoryAiohttp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_aiohttp',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryArraysRelatedLists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_arrays_related_lists',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryBasicGit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_basic_git',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_classes',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryDecorators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_decorators',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryDictionaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_dictionaries',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryDjango',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_django',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryDoctest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_doctest',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryExceptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_exceptions',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_files',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryFlask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_flask',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryFunctionsBuiltinFunctions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_functions_builtin_functions',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryGevent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_gevent',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryGithubGitlabBitbucket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_github_gitlab_bitbucket',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryHashTables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_hash_tables',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryIterators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_iterators',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryLambdaFunctions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_lambda_functions',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryLists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_lists',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryMagicMethods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_magic_methods',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryModules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_modules',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryNose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_nose',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryPipPypi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_pip_pypi',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryPyramid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_pyramid',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryPytest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_pytest',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryRecursion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_recursion',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryRegularExpressions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_regular_expressions',
            },
        ),
        migrations.CreateModel(
            name='PythonTheorySanic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_sanic',
            },
        ),
        migrations.CreateModel(
            name='PythonTheorySets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_sets',
            },
        ),
        migrations.CreateModel(
            name='PythonTheorySorting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_sorting',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryStacsQueues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_stacs_queues',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryStrings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_strings',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryTornado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_tornado',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryTuples',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_tuples',
            },
        ),
        migrations.CreateModel(
            name='PythonTheoryUnittestPyunit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_theory_unittest_pyunit',
            },
        ),
        migrations.CreateModel(
            name='PythonVariablesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('question', models.TextField()),
                ('level_1_slot_1_right_answer', models.TextField()),
                ('level_1_slot_2_wrong_answer', models.TextField()),
                ('level_2_slot_1_right_answer', models.TextField()),
                ('level_2_slot_2_wrong_answer', models.TextField()),
                ('level_2_slot_3_wrong_answer', models.TextField()),
                ('level_2_slot_4_wrong_answer', models.TextField()),
                ('level_3_slot_1_right_answer', models.TextField()),
                ('level_3_slot_2_right_answer', models.TextField()),
                ('level_3_slot_3_wrong_answer', models.TextField()),
                ('level_3_slot_4_wrong_answer', models.TextField()),
                ('level_4_slot_1_right_answer', models.TextField()),
                ('level_4_slot_2_wrong_answer', models.TextField()),
                ('level_4_slot_3_wrong_answer', models.TextField()),
                ('level_4_slot_4_wrong_answer', models.TextField()),
                ('question_ua', models.TextField()),
                ('level_1_slot_1_right_answer_ua', models.TextField()),
                ('level_1_slot_2_wrong_answer_ua', models.TextField()),
                ('level_2_slot_1_right_answer_ua', models.TextField()),
                ('level_2_slot_2_wrong_answer_ua', models.TextField()),
                ('level_2_slot_3_wrong_answer_ua', models.TextField()),
                ('level_2_slot_4_wrong_answer_ua', models.TextField()),
                ('level_3_slot_1_right_answer_ua', models.TextField()),
                ('level_3_slot_2_right_answer_ua', models.TextField()),
                ('level_3_slot_3_wrong_answer_ua', models.TextField()),
                ('level_3_slot_4_wrong_answer_ua', models.TextField()),
                ('level_4_slot_1_right_answer_ua', models.TextField()),
                ('level_4_slot_2_wrong_answer_ua', models.TextField()),
                ('level_4_slot_3_wrong_answer_ua', models.TextField()),
                ('level_4_slot_4_wrong_answer_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythontheoryvariables')),
            ],
            options={
                'db_table': 'python_variables_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonDataTypesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('question', models.TextField()),
                ('level_1_slot_1_right_answer', models.TextField()),
                ('level_1_slot_2_wrong_answer', models.TextField()),
                ('level_2_slot_1_right_answer', models.TextField()),
                ('level_2_slot_2_wrong_answer', models.TextField()),
                ('level_2_slot_3_wrong_answer', models.TextField()),
                ('level_2_slot_4_wrong_answer', models.TextField()),
                ('level_3_slot_1_right_answer', models.TextField()),
                ('level_3_slot_2_right_answer', models.TextField()),
                ('level_3_slot_3_wrong_answer', models.TextField()),
                ('level_3_slot_4_wrong_answer', models.TextField()),
                ('level_4_slot_1_right_answer', models.TextField()),
                ('level_4_slot_2_wrong_answer', models.TextField()),
                ('level_4_slot_3_wrong_answer', models.TextField()),
                ('level_4_slot_4_wrong_answer', models.TextField()),
                ('question_ua', models.TextField()),
                ('level_1_slot_1_right_answer_ua', models.TextField()),
                ('level_1_slot_2_wrong_answer_ua', models.TextField()),
                ('level_2_slot_1_right_answer_ua', models.TextField()),
                ('level_2_slot_2_wrong_answer_ua', models.TextField()),
                ('level_2_slot_3_wrong_answer_ua', models.TextField()),
                ('level_2_slot_4_wrong_answer_ua', models.TextField()),
                ('level_3_slot_1_right_answer_ua', models.TextField()),
                ('level_3_slot_2_right_answer_ua', models.TextField()),
                ('level_3_slot_3_wrong_answer_ua', models.TextField()),
                ('level_3_slot_4_wrong_answer_ua', models.TextField()),
                ('level_4_slot_1_right_answer_ua', models.TextField()),
                ('level_4_slot_2_wrong_answer_ua', models.TextField()),
                ('level_4_slot_3_wrong_answer_ua', models.TextField()),
                ('level_4_slot_4_wrong_answer_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythontheorydatatypes')),
            ],
            options={
                'db_table': 'python_data_types_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonBasicsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('question', models.TextField()),
                ('level_1_slot_1_right_answer', models.TextField()),
                ('level_1_slot_2_wrong_answer', models.TextField()),
                ('level_2_slot_1_right_answer', models.TextField()),
                ('level_2_slot_2_wrong_answer', models.TextField()),
                ('level_2_slot_3_wrong_answer', models.TextField()),
                ('level_2_slot_4_wrong_answer', models.TextField()),
                ('level_3_slot_1_right_answer', models.TextField()),
                ('level_3_slot_2_right_answer', models.TextField()),
                ('level_3_slot_3_wrong_answer', models.TextField()),
                ('level_3_slot_4_wrong_answer', models.TextField()),
                ('level_4_slot_1_right_answer', models.TextField()),
                ('level_4_slot_2_wrong_answer', models.TextField()),
                ('level_4_slot_3_wrong_answer', models.TextField()),
                ('level_4_slot_4_wrong_answer', models.TextField()),
                ('question_ua', models.TextField()),
                ('level_1_slot_1_right_answer_ua', models.TextField()),
                ('level_1_slot_2_wrong_answer_ua', models.TextField()),
                ('level_2_slot_1_right_answer_ua', models.TextField()),
                ('level_2_slot_2_wrong_answer_ua', models.TextField()),
                ('level_2_slot_3_wrong_answer_ua', models.TextField()),
                ('level_2_slot_4_wrong_answer_ua', models.TextField()),
                ('level_3_slot_1_right_answer_ua', models.TextField()),
                ('level_3_slot_2_right_answer_ua', models.TextField()),
                ('level_3_slot_3_wrong_answer_ua', models.TextField()),
                ('level_3_slot_4_wrong_answer_ua', models.TextField()),
                ('level_4_slot_1_right_answer_ua', models.TextField()),
                ('level_4_slot_2_wrong_answer_ua', models.TextField()),
                ('level_4_slot_3_wrong_answer_ua', models.TextField()),
                ('level_4_slot_4_wrong_answer_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythontheorybasics')),
            ],
            options={
                'db_table': 'python_basics_theoretical_test',
            },
        ),
    ]
