# Generated by Django 4.0.4 on 2022-07-16 10:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GuestsVisitStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guests_ip', models.TextField(null=True)),
                ('guests_location', models.TextField(null=True)),
                ('guests_hostname', models.TextField(null=True)),
                ('visit_date', models.TextField(null=True)),
                ('schools_email', models.TextField(null=True)),
                ('teams_email', models.TextField(null=True)),
                ('lets_try_it_date', models.TextField(null=True)),
                ('language', models.TextField(null=True)),
                ('programming_language', models.TextField(null=True)),
                ('guests_level', models.TextField(null=True)),
                ('lesson_time', models.TextField(null=True)),
                ('test_time', models.TextField(null=True)),
                ('start_lesson_time', models.TextField(null=True)),
                ('start_test_time', models.TextField(null=True)),
                ('end_theoretical_start_practical_test_time', models.TextField(null=True)),
                ('end_test_time', models.TextField(null=True)),
                ('theoretical_test_result', models.TextField(null=True)),
                ('practical_test_result', models.TextField(null=True)),
                ('register_date', models.TextField(null=True)),
                ('statistic_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'guests_visit_statistic',
            },
        ),
        migrations.CreateModel(
            name='JooTipsSiteErrorsStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guests_ip', models.TextField(null=True)),
                ('guests_location', models.TextField(null=True)),
                ('guests_hostname', models.TextField(null=True)),
                ('error_400', models.BooleanField(default=False)),
                ('error_403', models.BooleanField(default=False)),
                ('error_404', models.BooleanField(default=False)),
                ('error_500', models.BooleanField(default=False)),
                ('record_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'joo_tips_site_errors_statistic',
            },
        ),
        migrations.CreateModel(
            name='PythonAiohttpTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_aiohttp_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonArraysRelatedListsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_arrays_related_lists_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonBasicGitTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_basic_git_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonBasicsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_basics_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonClassesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_classes_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonDataTypesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_data_types_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonDecoratorsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_decorators_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonDictionariesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_dictionaries_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonDjangoTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_django_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonDoctestTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_doctest_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonExceptionsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_exceptions_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonFilesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_files_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonFlaskTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_flask_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonFunctionsBuiltinFunctionsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_functions_builtin_functions_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonGeventTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_gevent_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonGithubGitlabBitbucketTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_github_gitlab_bitbucket_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonHashTablesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_hash_tables_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonIteratorsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_iterators_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonLambdaFunctionsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_lambda_functions_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonListsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_lists_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonMagicMethodsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_magic_methods_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonModulesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_modules_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonNoseTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_nose_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonPipPypiTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_pip_pypi_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonPyramidTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_pyramid_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonPytestTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_pytest_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonRecursionTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_recursion_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonRegularExpressionsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_regular_expressions_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonSanicTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_sanic_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonSetsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_sets_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonSortingTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_sorting_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonStacsQueuesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_stacs_queues_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonStringsTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_strings_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonTornadoTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_tornado_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonTuplesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_tuples_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonUnittestPyunitTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_unittest_pyunit_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonVariablesTheory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
                ('text', models.TextField()),
                ('text_ua', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'python_variables_theory',
            },
        ),
        migrations.CreateModel(
            name='PythonVariablesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonvariablestheory')),
            ],
            options={
                'db_table': 'python_variables_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonUnittestPyunitTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonunittestpyunittheory')),
            ],
            options={
                'db_table': 'python_unittest_pyunit_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonTuplesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythontuplestheory')),
            ],
            options={
                'db_table': 'python_tuples_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonTornadoTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythontornadotheory')),
            ],
            options={
                'db_table': 'python_tornado_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonStringsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonstringstheory')),
            ],
            options={
                'db_table': 'python_strings_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonStacsQueuesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonstacsqueuestheory')),
            ],
            options={
                'db_table': 'python_stacs_queues_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonSortingTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonsortingtheory')),
            ],
            options={
                'db_table': 'python_sorting_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonSetsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonsetstheory')),
            ],
            options={
                'db_table': 'python_sets_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonSanicTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonsanictheory')),
            ],
            options={
                'db_table': 'python_sanic_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonRegularExpressionsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonregularexpressionstheory')),
            ],
            options={
                'db_table': 'python_regular_expressions_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonRecursionTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonrecursiontheory')),
            ],
            options={
                'db_table': 'python_recursion_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonPytestTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonpytesttheory')),
            ],
            options={
                'db_table': 'python_pytest_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonPyramidTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonpyramidtheory')),
            ],
            options={
                'db_table': 'python_pyramid_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonPipPypiTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonpippypitheory')),
            ],
            options={
                'db_table': 'python_pip_pypi_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonNoseTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonnosetheory')),
            ],
            options={
                'db_table': 'python_nose_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonModulesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonmodulestheory')),
            ],
            options={
                'db_table': 'python_modules_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonMagicMethodsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonmagicmethodstheory')),
            ],
            options={
                'db_table': 'python_magic_methods_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonListsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonliststheory')),
            ],
            options={
                'db_table': 'python_lists_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonLambdaFunctionsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonlambdafunctionstheory')),
            ],
            options={
                'db_table': 'python_lambda_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonIteratorsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythoniteratorstheory')),
            ],
            options={
                'db_table': 'python_iterators_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonHashTablesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonhashtablestheory')),
            ],
            options={
                'db_table': 'python_hash_tables_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonGithubGitlabBitbucketTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythongithubgitlabbitbuckettheory')),
            ],
            options={
                'db_table': 'python_github_gitlab_bitbucket_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonGeventTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythongeventtheory')),
            ],
            options={
                'db_table': 'python_gevent_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonFunctionsBuiltinFunctionsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythondatatypestheory')),
            ],
            options={
                'db_table': 'python_functions_builtin_functions_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonFlaskTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonflasktheory')),
            ],
            options={
                'db_table': 'python_flask_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonFilesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonfilestheory')),
            ],
            options={
                'db_table': 'python_files_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonExceptionsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonexceptionstheory')),
            ],
            options={
                'db_table': 'python_exceptions_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonDoctestTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythondoctesttheory')),
            ],
            options={
                'db_table': 'python_doctest_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonDjangoTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythondjangotheory')),
            ],
            options={
                'db_table': 'python_django_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonDictionariesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythondictionariestheory')),
            ],
            options={
                'db_table': 'python_dictionaries_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonDecoratorsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythondecoratorstheory')),
            ],
            options={
                'db_table': 'python_decorators_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonDataTypesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythondatatypestheory')),
            ],
            options={
                'db_table': 'python_data_types_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonClassesTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonclassestheory')),
            ],
            options={
                'db_table': 'python_classes_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonBasicsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonbasicstheory')),
            ],
            options={
                'db_table': 'python_basics_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonBasicGitTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonbasicgittheory')),
            ],
            options={
                'db_table': 'python_basic_git_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonArraysRelatedListsTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonarraysrelatedliststheory')),
            ],
            options={
                'db_table': 'python_arrays_related_lists_theoretical_test',
            },
        ),
        migrations.CreateModel(
            name='PythonAiohttpTheoreticalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(null=True)),
                ('question', models.TextField(null=True)),
                ('level_1_slot_1_right_answer', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_1_right_answer', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_1_right_answer', models.TextField(null=True)),
                ('level_3_slot_2_right_answer', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer', models.TextField(null=True)),
                ('level_4_slot_1_right_answer', models.TextField(null=True)),
                ('level_4_slot_2_right_answer', models.TextField(null=True)),
                ('level_4_slot_3_right_answer', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer', models.TextField(null=True)),
                ('question_ua', models.TextField(null=True)),
                ('level_1_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_1_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_2_slot_2_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_2_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_3_slot_3_wrong_answer_ua', models.TextField(null=True)),
                ('level_3_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('level_4_slot_1_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_2_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_3_right_answer_ua', models.TextField(null=True)),
                ('level_4_slot_4_wrong_answer_ua', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='joo_tips_app.pythonaiohttptheory')),
            ],
            options={
                'db_table': 'python_aiohttp_theoretical_test',
            },
        ),
    ]
